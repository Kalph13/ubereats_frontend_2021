fragment RestaurantParts on Restaurant {
    id
    name
    coverImg
    category {
        name
    }
    address
    isPromoted
}

fragment CategoryParts on Category {
    id
    name
    coverImg
    slug
    countRestaurants
}

fragment DishParts on Dish {
    id
    name
    price
    photo
    description
    options {
        name
        extra
        choices {
            name
            extra
        }
    }
}

fragment OrderParts on Order {
    id
    createdAt
    total
}

fragment FullOrderParts on Order {
    id
    status
    total
    driver {
        email
    }
    customer {
        email
    }
    restaurant {
        name
    }
}

query FindMe {
    findMe {
        id
        email
        role
        verified
    }
}

query AllRestaurants ($allRestaurantsInput: AllRestaurantsInput!) {
    allRestaurants (input: $allRestaurantsInput) {
        GraphQLSucceed
        GraphQLError
        totalPages
        totalResults
        restaurants {
            ...RestaurantParts
        }
    }
}

query AllCategories {
    allCategories {
        GraphQLSucceed
        GraphQLError
        categories {
            ...CategoryParts
        }
    }
}

query Restaurant ($restaurantInput: RestaurantInput!) {
    restaurant (input: $restaurantInput) {
        GraphQLSucceed
        GraphQLError
        restaurant { 
            ...RestaurantParts
            menu {
                ...DishParts
            }
        }
    }
}

query Category ($categoryInput: CategoryInput!) {
    category (input: $categoryInput) {
        GraphQLSucceed
        GraphQLError
        totalPages
        totalResults
        restaurants {
            ...RestaurantParts
        }
        category {
            ...CategoryParts
        }
    }
}

query SearchRestaurant($searchRestaurantInput: SearchRestaurantInput!) {
    searchRestaurant (input: $searchRestaurantInput) {
        GraphQLSucceed
        GraphQLError
        totalPages
        totalResults
        restaurants {
            ...RestaurantParts
        }
    }
}

query MyRestaurants {
    myRestaurants {
        GraphQLSucceed
        GraphQLError
        restaurants {
            ...RestaurantParts
        }
    }
}

query MyRestaurant($myRestaurantInput: MyRestaurantInput!) {
    myRestaurant (input: $myRestaurantInput) {
        GraphQLSucceed
        GraphQLError
        restaurant {
            ...RestaurantParts
            menu {
                ...DishParts
            }
            orders {
                ...OrderParts
            }
        }
    }
}

query GetOrder($getOrderInput: GetOrderInput!) {
    getOrder(input: $getOrderInput) {
        GraphQLSucceed
        GraphQLError
        order {
            ...FullOrderParts
        }
    }
}

mutation Login($loginInput: LoginInput!) {
    login (input: $loginInput) {
        GraphQLSucceed
        GraphQLError
        loginToken
    }
}

mutation CreateAccount($createAccountInput: CreateAccountInput!) {
    createAccount (input: $createAccountInput) {
        GraphQLSucceed
        GraphQLError
    }
}

mutation VerifyEmail($verifyEmailInput: VerifyEmailInput!) {
    verifyEmail (input: $verifyEmailInput) {
        GraphQLSucceed
        GraphQLError
    }
}

mutation EditProfile($editProfileInput: EditProfileInput!) {
    editProfile (input: $editProfileInput) {
        GraphQLSucceed
        GraphQLError
    }
}

mutation CreateRestaurant($createRestaurantInput: CreateRestaurantInput!) {
    createRestaurant (input: $createRestaurantInput) {
        GraphQLSucceed
        GraphQLError
        restaurantId
    }
}

mutation CreateDish($createDishInput: CreateDishInput!) {
    createDish (input: $createDishInput) {
        GraphQLSucceed
        GraphQLError
    }
}

mutation CreatePayment($createPaymentInput: CreatePaymentInput!) {
    createPayment (input: $createPaymentInput) {
        GraphQLSucceed
        GraphQLError
    }
}

mutation CreateOrder($createOrderInput: CreateOrderInput!) {
    createOrder (input: $createOrderInput) {
        GraphQLSucceed
        GraphQLError
        orderId
    }
}

mutation EditOrder($editOrderInput: EditOrderInput!) {
    editOrder (input: $editOrderInput) {
        GraphQLSucceed
        GraphQLError
    }
}

subscription OrderUpdate($orderUpdateInput: OrderUpdateInput!) {
    orderUpdate (input: $orderUpdateInput) {
        ...FullOrderParts
    }
}

subscription PendingOrders {
    pendingOrders {
        ...FullOrderParts
    }
}
